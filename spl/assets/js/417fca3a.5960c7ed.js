"use strict";(self.webpackChunksolana_spl_docs=self.webpackChunksolana_spl_docs||[]).push([[605],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),f=r,h=d["".concat(s,".").concat(f)]||d[f]||c[f]||o;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},469:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={title:"Feature Proposal Program"},s=void 0,p={unversionedId:"feature-proposal",id:"feature-proposal",title:"Feature Proposal Program",description:"The Feature Proposal Program provides a workflow for activation of Solana",source:"@site/src/feature-proposal.md",sourceDirName:".",slug:"/feature-proposal",permalink:"/solana-program-library/token/feature-proposal",tags:[],version:"current",frontMatter:{title:"Feature Proposal Program"},sidebar:"docs",previous:{title:"Stake Pool Program",permalink:"/solana-program-library/token/stake-pool"}},u=[{value:"Background",id:"background",children:[],level:2},{value:"Source",id:"source",children:[],level:2},{value:"Interface",id:"interface",children:[],level:2},{value:"Command-line Utility",id:"command-line-utility",children:[{value:"Configuration",id:"configuration",children:[],level:3}],level:2},{value:"Feature Proposal Life Cycle",id:"feature-proposal-life-cycle",children:[{value:"Implement the Feature",id:"implement-the-feature",children:[],level:3},{value:"Initiate the Feature Proposal",id:"initiate-the-feature-proposal",children:[],level:3},{value:"Tally the Votes",id:"tally-the-votes",children:[],level:3}],level:2}],c={toc:u};function d(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Feature Proposal Program provides a workflow for activation of Solana\nnetwork features through community vote based on validator stake weight."),(0,o.kt)("p",null,"Community voting is accomplished using ",(0,o.kt)("a",{parentName:"p",href:"/solana-program-library/token/token"},"SPL Tokens"),".  Tokens are\nminted that represent the total active stake on the network, and distributed to\nall validators based on their stake.  Validators vote for feature activation by\ntransferring their vote tokens to a predetermined address.  Once the vote\nthreshold is met the feature is activated."),(0,o.kt)("h2",{id:"background"},"Background"),(0,o.kt)("p",null,"The Solana validator software supports runtime feature activation through the\nbuilt-in ",(0,o.kt)("inlineCode",{parentName:"p"},"Feature")," program.  This program ensures that features are activated\nsimultaneously across all validators to avoid divergent behavior that would\ncause hard forks or otherwise break consensus."),(0,o.kt)("p",null,"The\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/solana-program/latest/solana_program/feature/index.html"},"feature"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/solana-sdk/latest/solana_sdk/feature_set/index.html"},"feature_set"),"\nRust modules are the primitives for this facility, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature"),"\ncommand-line subcommands allow for easy feature status inspection and feature\nactivation."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature activate")," workflow was designed for use by the core Solana\ndevelopers to allow for low-overhead addition of non-controversial network\nfeatures over time."),(0,o.kt)("p",null,"The Feature Proposal Program provides an additional mechanism over these runtime\nfeature activation primitives to permit feature activation by community vote\nwhen appropriate."),(0,o.kt)("h2",{id:"source"},"Source"),(0,o.kt)("p",null,"The Feature Proposal Program's source is available on\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana-program-library"},"github")),(0,o.kt)("h2",{id:"interface"},"Interface"),(0,o.kt)("p",null,"The Feature Proposal Program is written in Rust and available on ",(0,o.kt)("a",{parentName:"p",href:"https://crates.io/crates/spl-feature-proposal"},"crates.io")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/spl-feature-proposal"},"docs.rs"),"."),(0,o.kt)("h2",{id:"command-line-utility"},"Command-line Utility"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"spl-feature-proposal")," command-line utility can be used to manage feature\nproposal.  Once you have ",(0,o.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"Rust installed"),", run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ cargo install spl-feature-proposal-cli\n")),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"spl-feature-proposal --help")," for a full description of available commands."),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"spl-feature-proposal")," configuration is shared with the ",(0,o.kt)("inlineCode",{parentName:"p"},"solana")," command-line tool."),(0,o.kt)("h2",{id:"feature-proposal-life-cycle"},"Feature Proposal Life Cycle"),(0,o.kt)("p",null,"This section describes the life cycle of a feature proposal."),(0,o.kt)("h3",{id:"implement-the-feature"},"Implement the Feature"),(0,o.kt)("p",null,"The first step is to conceive of the new feature and realize it in the\nSolana code base, working with the core Solana developers at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana"},"https://github.com/solana-labs/solana"),"."),(0,o.kt)("p",null,"During the implementation, a ",(0,o.kt)("em",{parentName:"p"},"feature id")," will be required to identity the new\nfeature in the code base to avoid the new functionality until its activation.\nThe ",(0,o.kt)("em",{parentName:"p"},"feature id")," for a feature proposal is derived by running the following\ncommands."),(0,o.kt)("p",null,"First create a keypair for the proposal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ solana-keygen new --outfile feature-proposal.json --silent --no-passphrase\nWrote new keypair to feature-proposal.json\n")),(0,o.kt)("p",null,"Now run the ",(0,o.kt)("inlineCode",{parentName:"p"},"spl-feature-proposal")," program to derive the ",(0,o.kt)("em",{parentName:"p"},"feature id"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ spl-feature-proposal address feature-proposal.json\nFeature Id: HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA\nToken Mint Address: ALvA7Lv9jbo8JFhxqnRpjWWuR3aD12uCb5KBJst4uc3d\nAcceptance Token Address: AdqKm3mSJf8AtTWjfpA5ZbJszWQPcwyLA2XkRyLbf3Di\n")),(0,o.kt)("p",null,"which in this case is ",(0,o.kt)("inlineCode",{parentName:"p"},"HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA")," is the identifier that will be\nused in the code base and eventually will be visible in the ",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature status")," command."),(0,o.kt)("p",null,"Note however that it is not possible to use ",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature activate")," to\nactivate this feature, as there is no private key for\n",(0,o.kt)("inlineCode",{parentName:"p"},"HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA"),".  Activation of this feature is\nonly possible by the Feature Proposal Program."),(0,o.kt)("h3",{id:"initiate-the-feature-proposal"},"Initiate the Feature Proposal"),(0,o.kt)("p",null,"After the feature is implemented and deployed to the Solana cluster,\nthe ",(0,o.kt)("em",{parentName:"p"},"feature id")," will be visible in ",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature status")," and the ",(0,o.kt)("em",{parentName:"p"},"feature\nproposer")," may initiate the community proposal process."),(0,o.kt)("p",null,"This is done by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ spl-feature-proposal propose feature-proposal.json\nFeature Id: HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA\nToken Mint Address: ALvA7Lv9jbo8JFhxqnRpjWWuR3aD12uCb5KBJst4uc3d\nDistributor Token Address: GK55hNft4TGc3Hg4KzbjEmju8VfaNuXK8jQNDTZKcsNF\nAcceptance Token Address: AdqKm3mSJf8AtTWjfpA5ZbJszWQPcwyLA2XkRyLbf3Di\nNumber of validators: 376\nTokens to be minted: 134575791.53064314\nTokens required for acceptance: 90165780.3255309 (67%)\nToken distribution file: feature-proposal.csv\nJSON RPC URL: http://api.mainnet-beta.solana.com\n\nDistribute the proposal tokens to all validators by running:\n    $ solana-tokens distribute-spl-tokens --from GK55hNft4TGc3Hg4KzbjEmju8VfaNuXK8jQNDTZKcsNF --input-csv feature-proposal.csv --db-path db.8CyUVvio --fee-payer ~/.config/solana/id.json --owner <FEATURE_PROPOSAL_KEYPAIR>\n    $ solana-tokens spl-token-balances --mint ALvA7Lv9jbo8JFhxqnRpjWWuR3aD12uCb5KBJst4uc3d --input-csv feature-proposal.csv\n\nOnce the distribution is complete, request validators vote for the proposal. To vote, validators should first look up their token account address:\n    $ spl-token --owner ~/validator-keypair.json accounts ALvA7Lv9jbo8JFhxqnRpjWWuR3aD12uCb5KBJst4uc3d\nand then submit their vote by running:\n    $ spl-token --owner ~/validator-keypair.json transfer <TOKEN_ACCOUNT_ADDRESS> ALL AdqKm3mSJf8AtTWjfpA5ZbJszWQPcwyLA2XkRyLbf3Di\n\nPeriodically the votes must be tallied by running:\n  $ spl-feature-proposal tally 8CyUVvio2oYAP28ZkMBPHq88ikhRgWet6i4NYsCW5Cxa\nTallying is permissionless and may be run by anybody.\nOnce this feature proposal is accepted, the HQ3baDfNU7WKCyWvtMYZmi51YPs7vhSiLn1ESYp3jhiA feature will be activated at the next epoch.\n\nAdd --confirm flag to initiate the feature proposal\n")),(0,o.kt)("p",null,"If the output looks good run the command again with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--confirm")," flag to\ncontinue, and then follow the remaining steps in the output to distribute the\nvote tokens to all the validators."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"COST:")," As a part of token distribution, the ",(0,o.kt)("em",{parentName:"p"},"feature proposer")," will be\nfinancing the creation of SPL Token accounts for each of the validators.  A SPL\nToken account requires 0.00203928 SOL at creation, so the cost for initiating a\nfeature proposal on a network with 500 validators is approximately 1 SOL."),(0,o.kt)("h3",{id:"tally-the-votes"},"Tally the Votes"),(0,o.kt)("p",null,"After advertising to the validators that a feature proposal is pending their\nacceptance, the votes are tallied by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ spl-feature-proposal tally 8CyUVvio2oYAP28ZkMBPHq88ikhRgWet6i4NYsCW5Cxa\n")),(0,o.kt)("p",null,"Anybody may tally the vote.  Once the required number of votes are tallied, the\nfeature will be automatically activated at the start of the next epoch."),(0,o.kt)("p",null,"Upon a successful activation the feature will now show as activated by\n",(0,o.kt)("inlineCode",{parentName:"p"},"solana feature status")," as well."))}d.isMDXComponent=!0}}]);